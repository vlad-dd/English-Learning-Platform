type Query {
    countOfTenses(tense: String!): [TestTense]!
    dictionary(word: String!): [Dictionary]!
    releases: [Releases]!
    grammarByLevel(level: String!, theme: String!): [GrammarLevel]!
}

# Tense

type TestTense {
    tense: String
    tableData: AllTable
    cases: [Cases]!
    examples: [Examples]!
    practice: [PracticeSentences!]
}

type AllTable {
    tip: String
    table: [TableThing]
}

type TableThing {
    key: String
    type: String
    noun: String
    noun_1: String
    auxiliar: String
    auxiliar_1: String
}

type Cases {
    key: String
    label: String
    icon: String
    titles: [CaseTitles]!

}

type CaseTitles {
    description: String
}

type Examples {
    key: Int
    header: String
    icon: String
    sentences: [ExampleSentences]!
}

type ExampleSentences {
    id: Int
    sentence: String
}

type PracticeSentences {
    sentences: [PracticeSentence!]

}

type PracticeSentence {
    id: Int
    label: String
    missed: String
    partOne: String
    partTwo: String
}

# Dictionary

type Dictionary {
    word: String
    phonetic: String
    phonetics: [Phonetics]
    meanings: [Meanings]
    license: License
    sourceUrls: [String]
}

type Phonetics {
    text: String!
    audio: String
    sourceUrl: String
    license: License
}

type Meanings {
    partOfSpeech: String
    definitions: [Definition]
    synonyms: [String]
    antonyms: [String]
}

type License {
    name: String
    url: String
}

type Definition {
    definition: String
    synonyms: [String]
    antonyms: [String]
    example: String
}

type Releases {
  id: String
  date: String
  version: String
  isLastUpdate: Boolean
  title: String
  description: String
}

#Grammar Levels

type GrammarLevel {
    title: String
    tip: String
    explanation: String
    content: String
    cases: [Cases]!
    quiz: Quiz!
}

type Quiz {
    quizSynopsis: String
    questions: [QuizQuestion]!
}

type QuizQuestion {
    question: String
    questionType: String
    answerSelectionType: String
    answers: [String]
    correctAnswer: String
    messageForCorrectAnswer: String
    messageForIncorrectAnswer: String
    explanation: String
    point: String
}
